!function(){"use strict";var e={766:function(e,t,n){n.r(t),t.default='<!doctype html> <html lang="en"> <head> <meta charset="UTF-8"/> <meta http-equiv="X-UA-Compatible" content="IE=edge"/> <meta name="viewport" content="width=device-width,initial-scale=1"/> <title>Async-rase</title> </head> <body></body> </html> '},674:function(e,t,n){n.r(t)},495:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0}),t.App=void 0;const a=n(77),r=n(977),i=n(346),o=n(394),s=n(131),c=n(790),l=n(13),d=n(74);class m{static renderNewPage(e){const t=document.querySelector(`#${m.defaultPageId}`);t&&t.remove();let n=null;if("garage"===e?n=new i.GaragePage(e):"winners"===e&&(n=new o.WinnersPage(e)),n){const t=n.render();t.id=m.defaultPageId,m.container.append(t),"winners"===e&&(0,a.checkIfButtonActive)("winners")}}saveState(e){if("winners"===e){const e=(0,s.getElementFromDOM)(".input-row_create .input-text"),t=(0,s.getElementFromDOM)(".input-row_create .input-color"),n=(0,s.getElementFromDOM)(".input-row_update .input-text"),a=(0,s.getElementFromDOM)(".input-row_update .input-color"),r={inputTextCr:e.value,inputColorCr:t.value,inputTextUpd:n.value,inputColorUpd:a.value};localStorage.savedGarageState=JSON.stringify(r)}}enableRouteChange(){window.addEventListener("hashchange",(()=>{const e=window.location.hash.slice(1);this.saveState(e),m.renderNewPage(e),(0,a.checkIfButtonActive)(e),localStorage.page=e}))}constructor(){this.header=new r.Header}run(){m.container.append(this.header.render());let e="garage";localStorage.page||localStorage.setItem("page","garage"),e=localStorage.page,m.renderNewPage(e),(0,a.checkIfButtonActive)(e),(0,c.addGarageActionsListeners)(),(0,l.addCarRaceListeners)(),(0,d.addpaginatorBtnsListeners)(),this.enableRouteChange()}}t.App=m,m.container=document.body,m.defaultPageId="current-page"},443:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.carsData=void 0,t.carsData=[{brand:"Lexus",models:["RX 2019","LC 500 2017"]},{brand:"Toyota",models:["Camry 2022","Corolla 2021","RAV4 2020","Highlander 2019","Sienna 2018"]},{brand:"Honda",models:["Civic 2022","Accord 2021","CR-V 2020","Pilot 2019"]},{brand:"BMW",models:["3 Series 2022","5 Series 2021","X5 2020"]},{brand:"Ford",models:["Mustang 2022","F-150 2021","Explorer 2020","Escape 2019"]},{brand:"Mercedes-Benz",models:["E-Class 2022","C-Class 2021","GLC 2020","S-Class 2019"]},{brand:"Chevrolet",models:["Silverado 2022","Tahoe 2021","Camaro 2020","Equinox 2019"]},{brand:"Nissan",models:["Altima 2022","Rogue 2021","Maxima 2020","Pathfinder 2019"]},{brand:"Audi",models:["A4 2022","Q5 2021","A6 2020"]},{brand:"Jeep",models:["Wrangler 2022","Grand Cherokee 2021","Compass 2020","Renegade 2019"]},{brand:"Hyundai",models:["Elantra 2022","Tucson 2021","Santa Fe 2020"]},{brand:"Kia",models:["Sorento 2022","Optima 2021","Sportage 2020"]},{brand:"Subaru",models:["Outback 2022","Forester 2021","Legacy 2020"]},{brand:"Mazda",models:["Mazda3 2022","CX-5 2021","Mazda6 2020"]},{brand:"Volkswagen",models:["Golf 2022","Jetta 2021","Passat 2020"]},{brand:"Volvo",models:["XC60 2022","S60 2021","XC90 2020"]},{brand:"Chrysler",models:["Pacifica 2022","300 2021"]},{brand:"Dodge",models:["Charger 2022","Durango 2021"]},{brand:"GMC",models:["Acadia 2022","Terrain 2021"]},{brand:"Buick",models:["Encore 2022","Enclave 2021"]},{brand:"Cadillac",models:["XT5 2022","Escalade 2021"]},{brand:"Acura",models:["MDX 2022","TLX 2021"]},{brand:"Infiniti",models:["Q50 2022","QX60 2021"]},{brand:"Lincoln",models:["Navigator 2022","Aviator 2021"]},{brand:"Lamborghini",models:["Huracan","Aventador"]},{brand:"Ferrari",models:["488","F8 Tributo"]},{brand:"Porsche",models:["911","Cayenne"]},{brand:"Maserati",models:["Quattroporte","Ghibli"]},{brand:"Bentley",models:["Continental GT","Flying Spur"]},{brand:"Rolls-Royce",models:["Phantom","Cullinan"]},{brand:"McLaren",models:["720S","GT"]},{brand:"Bugatti",models:["Chiron","Divo"]},{brand:"Jaguar",models:["F-Type","F-PACE"]},{brand:"Land Rover",models:["Range Rover","Defender"]},{brand:"Tesla",models:["Model S","Model 3","Model X","Model Y"]},{brand:"Fiat",models:["500","Spider"]},{brand:"Alfa Romeo",models:["Giulia","Stelvio"]},{brand:"Mini",models:["Cooper","Countryman"]},{brand:"Lada",models:["Niva","Granta"]},{brand:"Jeep",models:["Wrangler","Grand Cherokee"]},{brand:"Renault",models:["Clio","Megane"]},{brand:"Peugeot",models:["208","308"]},{brand:"Citroen",models:["C3","C4"]},{brand:"Dacia",models:["Sandero","Duster"]},{brand:"Suzuki",models:["Swift","Vitara"]},{brand:"Mitsubishi",models:["Outlander","Eclipse Cross"]},{brand:"Foton",models:["Tunland","Sauvana"]},{brand:"Geely",models:["Emgrand 7","Coolray"]},{brand:"Great Wall",models:["Haval H6","Wey VV5"]}]},977:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0}),t.Header=void 0;const a=n(657),r=[{id:"garage",text:"to garage"},{id:"winners",text:"to winners"}],i={tag:"header",class:["header"]};t.Header=class{constructor(){this.container=(0,a.createElement)(i)}renderPageBtns(){r.forEach((e=>{const t=document.createElement("a");t.href=`#${e.id}`,t.innerText=e.text,t.classList.add("button","button_type1"),this.container.append(t)}))}render(){return this.renderPageBtns(),this.container}}},361:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.flag=t.car=void 0,t.car='<?xml version="1.0" standalone="no"?>\n<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 20010904//EN" "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd">\n<svg version="1.0" xmlns="http://www.w3.org/2000/svg"\n  viewBox="0 0 1280.000000 640.000000" preserveAspectRatio="xMidYMid meet">\n  <metadata>\n    Created by potrace 1.15, written by Peter Selinger 2001-2017\n  </metadata>\n  <g transform="translate(0.000000,640.000000) scale(0.100000,-0.100000)" >\n    <path d="M3525 5341 c-72 -18 -79 -28 -90 -121 -4 -30 -11 -62 -16 -71 -4 -9\n-97 -51 -206 -94 -774 -304 -1348 -540 -1603 -661 -163 -77 -222 -91 -421\n-104 -85 -5 -170 -14 -189 -20 -101 -32 -362 -58 -620 -63 l-115 -2 -47 -80\nc-47 -78 -47 -80 -29 -100 34 -36 35 -77 5 -177 -30 -99 -34 -178 -19 -370 5\n-67 4 -88 -6 -88 -29 0 -83 -56 -110 -114 -50 -106 -74 -343 -48 -467 13 -58\n13 -62 3 -159 -5 -54 16 -238 28 -244 2 -1 29 -20 61 -41 73 -49 123 -103 132\n-143 17 -79 167 -155 355 -181 104 -15 969 -97 1087 -104 l32 -2 5 160 c7 230\n50 394 146 559 281 479 917 673 1405 429 316 -159 530 -424 598 -742 22 -106\n29 -365 13 -519 l-8 -82 3002 0 c2855 0 3002 1 2995 18 -33 87 -56 325 -45\n461 28 320 177 567 459 759 399 273 847 282 1243 24 239 -157 397 -392 460\n-687 18 -84 15 -341 -5 -430 -8 -38 -14 -71 -12 -73 7 -8 386 20 478 34 180\n28 253 65 304 152 24 41 28 57 28 127 -1 44 -9 117 -20 163 -18 79 -18 88 -2\n190 31 199 40 306 41 497 1 176 -1 195 -23 260 -46 135 -103 190 -283 274\n-222 104 -633 220 -1168 330 -523 108 -1524 210 -2054 211 l-229 0 -236 139\nc-813 477 -1593 884 -1852 966 -498 157 -1598 195 -2892 100 l-188 -14 -47 30\nc-92 58 -223 89 -297 70z m1912 -311 c13 -45 58 -305 88 -515 33 -226 74 -539\n71 -542 -7 -7 -1672 40 -2054 58 -357 16 -464 56 -573 215 -62 91 -87 225 -59\n326 12 40 56 74 192 148 369 198 799 289 1618 340 246 15 290 16 510 16 l194\n-1 13 -45z m649 10 c383 -36 717 -86 934 -139 210 -52 451 -163 720 -332 141\n-88 379 -259 380 -271 0 -5 -14 -8 -32 -8 -48 0 -114 -37 -140 -78 -24 -39\n-30 -113 -15 -189 l9 -43 -904 0 -904 0 -176 540 -175 540 47 0 c25 0 141 -9\n256 -20z" />\n    <path d="M2617 3125 c-431 -82 -774 -440 -838 -875 -17 -117 -7 -292 24 -410\n113 -436 497 -751 947 -777 507 -29 959 313 1076 813 28 117 26 348 -4 467\n-94 378 -383 670 -760 768 -105 27 -336 34 -445 14z m378 -310 c84 -21 209\n-85 280 -142 116 -94 210 -242 251 -393 23 -87 24 -260 0 -355 -58 -237 -242\n-439 -473 -519 -531 -186 -1074 277 -969 828 30 152 94 274 206 386 111 110\n237 178 385 206 84 16 235 11 320 -11z" />\n    <path d="M2918 2568 c2 -90 7 -167 12 -172 17 -17 108 58 201 166 l51 57 -48\n31 c-52 33 -131 65 -185 75 l-34 6 3 -163z" />\n    <path d="M2591 2700 c-62 -22 -167 -82 -164 -94 3 -13 237 -216 249 -216 7 0\n15 7 18 16 8 20 8 127 -1 232 -7 95 -8 96 -102 62z" />\n    <path d="M3209 2355 c-57 -64 -105 -123 -107 -131 -6 -25 46 -35 157 -29 58 3\n121 8 139 11 33 5 34 6 27 42 -7 44 -64 167 -92 201 l-19 24 -105 -118z" />\n    <path d="M2260 2409 c-31 -44 -68 -133 -77 -186 l-6 -33 155 0 c165 0 201 9\n181 44 -13 24 -204 216 -214 216 -5 0 -22 -18 -39 -41z" />\n    <path d="M2786 2354 c-36 -35 0 -87 44 -64 26 14 26 56 1 70 -25 13 -27 13\n-45 -6z" />\n    <path d="M2751 2186 c-57 -32 -68 -111 -22 -157 43 -42 101 -43 143 -1 42 42\n41 100 -1 143 -33 32 -78 38 -120 15z" />\n    <path d="M2560 2136 c-19 -23 -8 -61 18 -64 44 -7 67 32 36 62 -19 20 -38 20\n-54 2z" />\n    <path d="M3002 2124 c-27 -19 -28 -36 -3 -58 25 -23 61 -6 61 29 0 33 -30 49\n-58 29z" />\n    <path d="M2245 1993 c-77 -6 -76 -5 -59 -65 16 -55 61 -146 92 -186 l18 -23\n103 122 c57 67 104 129 105 138 1 14 -14 16 -104 17 -58 0 -127 -1 -155 -3z" />\n    <path d="M3165 1981 c-44 -4 -61 -10 -63 -22 -3 -16 210 -229 228 -229 22 0\n86 141 105 228 l7 32 -109 -2 c-59 -1 -135 -4 -168 -7z" />\n    <path d="M2776 1914 c-19 -18 -19 -20 -6 -45 6 -11 21 -19 35 -19 20 0 45 24\n45 44 0 10 -32 36 -45 36 -7 0 -21 -7 -29 -16z" />\n    <path d="M2589 1743 c-86 -90 -139 -151 -139 -162 0 -25 179 -101 236 -101\nl27 0 -7 143 c-9 166 -13 187 -35 187 -9 0 -46 -30 -82 -67z" />\n    <path d="M2936 1801 c-6 -10 -24 -168 -29 -258 -3 -60 -2 -63 19 -63 79 0 262\n68 248 92 -5 7 -53 64 -108 126 -93 105 -117 124 -130 103z" />\n    <path d="M10723 3125 c-318 -58 -597 -266 -743 -555 -223 -441 -98 -996 289\n-1288 112 -84 188 -125 311 -166 274 -91 545 -70 802 61 552 282 735 983 392\n1500 -225 339 -651 521 -1051 448z m385 -315 c348 -98 579 -443 532 -796 -67\n-508 -596 -796 -1055 -574 -239 116 -396 352 -412 620 -20 335 192 640 516\n745 122 40 289 42 419 5z" />\n    <path d="M11017 2568 c3 -90 9 -167 14 -172 13 -14 53 18 155 122 l95 97 -23\n18 c-50 40 -189 97 -235 97 -10 0 -11 -33 -6 -162z" />\n    <path d="M10705 2706 c-50 -16 -133 -58 -163 -82 l-23 -19 121 -107 c67 -60\n128 -108 135 -108 23 0 27 39 20 186 -8 162 -4 157 -90 130z" />\n    <path d="M11307 2354 c-59 -65 -107 -126 -107 -136 0 -11 11 -18 38 -22 44 -7\n278 7 289 17 15 16 -51 183 -94 236 l-19 24 -107 -119z" />\n    <path d="M10362 2413 c-39 -62 -70 -134 -78 -184 l-7 -39 152 0 c86 0 161 5\n172 10 17 10 18 13 5 38 -8 15 -59 71 -114 125 l-99 99 -31 -49z" />\n    <path d="M10888 2359 c-24 -14 -23 -56 2 -69 44 -23 80 29 44 64 -18 19 -23\n19 -46 5z" />\n    <path d="M10851 2187 c-49 -29 -66 -101 -35 -146 9 -13 32 -29 50 -37 29 -12\n39 -12 68 0 99 41 85 180 -19 192 -24 3 -50 -1 -64 -9z" />\n    <path d="M10660 2136 c-19 -23 -8 -61 18 -64 44 -7 67 32 36 62 -19 20 -38 20\n-54 2z" />\n    <path d="M11096 2124 c-9 -8 -16 -22 -16 -29 0 -13 26 -45 36 -45 20 0 44 25\n44 45 0 14 -8 29 -19 35 -25 13 -27 13 -45 -6z" />\n    <path d="M10335 1991 c-60 -6 -60 -6 -57 -36 9 -69 104 -248 122 -229 57 61\n210 250 207 258 -4 12 -176 17 -272 7z" />\n    <path d="M11267 1983 c-68 -5 -79 -19 -47 -60 23 -31 200 -193 210 -193 3 0\n20 24 37 53 29 48 52 111 67 180 l6 27 -107 -2 c-60 -1 -134 -3 -166 -5z" />\n    <path d="M10870 1910 c-16 -31 4 -62 38 -58 21 2 28 9 30 32 5 45 -47 65 -68\n26z" />\n    <path d="M10651 1703 c-56 -59 -101 -113 -101 -120 0 -28 172 -103 237 -103\nl26 0 -7 123 c-10 179 -15 207 -36 207 -10 0 -63 -48 -119 -107z" />\n    <path d="M11035 1801 c-7 -12 -23 -144 -29 -243 -4 -77 -4 -78 19 -78 45 0\n130 22 193 51 l64 29 -19 23 c-65 82 -198 227 -209 227 -7 0 -15 -4 -19 -9z" />\n  </g>\n</svg>',t.flag='<?xml version="1.0" ?>\n\x3c!-- Uploaded to: SVG Repo, www.svgrepo.com, Generator: SVG Repo Mixer Tools --\x3e\n<svg fill="#ff0000" viewBox="0 0 512 512" data-name="Layer 1" id="Layer_1"\n  xmlns="http://www.w3.org/2000/svg">\n  <title />\n  <path\n    d="M448.24,140.92l-.77-.77c-19.39-19.2-39.75-31.51-62.15-37.62v0l-1.8-.47h0l-2.06-.53v0c-17.63-4.21-36.52-4.7-59-1.51v0l-2.73.42h0l-1.43.21v0c-15.69,2.48-31.56,6.39-46.92,10.19-4.94,1.22-9.88,2.44-14.81,3.62h0c-20,4.76-41.36,9.16-62.57,9.16h0c-21.56,0-40.81-4.58-58.74-14l3.58-20.32A8,8,0,1,0,123,86.54L63.75,422.68A8,8,0,0,0,70.24,432a7.34,7.34,0,0,0,1.39.13,8,8,0,0,0,7.87-6.62l24.33-137.95c17.08,15.13,35,25.12,54.48,30.43v0l1.79.46h0l2.08.53v0a135,135,0,0,0,31.66,3.59,194.88,194.88,0,0,0,27.36-2.07v0l2.73-.41h0l1.42-.21v0c15.69-2.48,31.56-6.39,46.92-10.19,4.94-1.22,9.88-2.44,14.81-3.61h0c20-4.76,41.35-9.16,62.57-9.16h0c22.89,0,43.19,5.16,62.05,15.76l2.43,1.37.52-2.74c3.74-19.76,7.48-39.28,11.11-58l0-.13c3.72-19.19,7.45-38.14,11.08-56.32l0-.15c3.72-18.66,7.45-37,11.08-54.66ZM348,292.87c-20,.22-40.05,4.15-58.88,8.57,0-.1,0-.19,0-.28q5.19-31.52,10.36-62.94c16.48-3.58,37.66-7.31,58.93-6.05-.22,1.29-.45,2.59-.67,3.89l-.42,2.39q-.48,2.81-1,5.62l-.36,2.09C353.39,261.45,350.7,277.09,348,292.87Zm-161.71-111,.84-4.88c.16-.88.31-1.75.46-2.64.42-2.43.84-4.88,1.26-7.33a1.06,1.06,0,0,0,0-.19c2.22-12.88,4.47-26,6.73-39.19,20-.21,40-4.15,58.88-8.56l0,.15q-5.19,31.58-10.38,63.06c-16.49,3.58-37.66,7.31-58.93,6.05l.48-2.79C185.87,184.28,186.08,183.06,186.29,181.83Zm109.73,53h0c-8.25,1.84-16.6,3.89-24.69,5.89-11.2,2.77-22.75,5.62-34.14,7.89q5.2-31.44,10.41-63h0c8.25-1.84,16.6-3.89,24.69-5.89,11.2-2.77,22.75-5.62,34.15-7.89q-5.22,31.44-10.42,63ZM180.47,192c-.13.75-.25,1.49-.38,2.24-.28,1.58-.55,3.17-.83,4.76-.17,1-.33,1.91-.5,2.87-.29,1.69-.59,3.39-.88,5.09l-.21,1.18c-2.55,14.68-5.09,29.2-7.58,43.38-20-3.54-38.17-11.82-55.46-25.24l9.42-53.45A125.09,125.09,0,0,0,180.47,192Zm242,57.54a125.52,125.52,0,0,0-59.3-21c.11-.63.21-1.25.32-1.88q.48-2.72.94-5.41l.27-1.53c.36-2.1.73-4.21,1.09-6.3l.06-.34q1.44-8.26,2.86-16.43.54-3,1.06-6.06l0-.1c.45-2.56.89-5.11,1.34-7.65.05-.3.1-.6.16-.9l1.23-7,.08-.43c.32-1.83.64-3.64.95-5.45,21.41,3.8,40.81,13.05,59.22,28.24C429.37,214.13,425.91,231.71,422.45,249.52ZM380.73,105.46q-1.17,6.5-2.34,13.12l-.08.43q-2.06,11.51-4.13,23.29c-.05.24-.09.49-.13.74q-1.87,10.58-3.76,21.3h0v0c-17.22-2.51-36.09-1.73-59,2.43q1.9-11.47,3.8-22.93l1.38-8.27c.39-2.37.78-4.73,1.18-7.1q2-12.18,4.05-24.34C344.37,100.82,363.21,101.24,380.73,105.46ZM162.89,315q1.19-6.6,2.38-13.3l0-.27c2.65-14.86,5.34-30,8-45.34h.13c2,.3,4.08.54,6.16.75l.42,0c4.45.42,9,.65,13.74.65a215.59,215.59,0,0,0,38.51-3.87q-.93,5.56-1.85,11.13-4.27,25.82-8.56,51.52C199.25,319.65,180.41,319.23,162.89,315Z" />\n</svg>'},657:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createElement=void 0,t.createElement=function(e){const t=document.createElement(e.tag);if(e.class&&e.class.forEach((function(e){t.classList.add(`${e}`)})),e.innerHTML&&(t.innerHTML=e.innerHTML),e.attribute){const n=e.attribute,a=function(){if(n)return Object.keys(n)}();if(n&&a)for(let e=0;e<a.length;e+=1)t.setAttribute(a[e],n[a[e]])}return t}},974:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0}),t.CarBrand=void 0;const a=n(443);t.CarBrand=class{constructor(){this.brand="",this.model=""}getCar(){return this.getRandomBrand(),this.getRandomModel(),{name:`${this.brand} ${this.model}`,color:this.getRandomColor()}}getRandomColor(){const e=Math.floor(256*Math.random()),t=Math.floor(256*Math.random()),n=Math.floor(256*Math.random());return`#${e.toString(16).padStart(2,"0")}${t.toString(16).padStart(2,"0")}${n.toString(16).padStart(2,"0")}`}getRandomNum(e){return Math.floor(Math.random()*(e+1))}getRandomBrand(){const e=Object.keys(a.carsData),t=this.getRandomNum(e.length-1),n=a.carsData[t].brand;this.brand=n}getRandomModel(){const e=[];a.carsData.map((t=>e.push(t.brand)));const t=e.indexOf(this.brand);if(-1!==t){const e=a.carsData[t].models,n=e[this.getRandomNum(e.length-1)];this.model=n}}}},889:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0}),t.Car=void 0;const a=n(346),r=n(131);t.Car=class{constructor(e){this.carsWrapper=(0,r.getElementFromDOM)(".cars-wrapper"),this.car=e}createCar(){this.carsWrapper&&(0,a.createCars)(this.carsWrapper,this.car)}updateCar(){const e=document.getElementById(`${this.car.id}`);e&&(e.children[0].children[2].innerHTML=this.car.name,e.children[1].children[1].style.fill=this.car.color)}}},131:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.getElementsListFromDOM=t.getElementFromDOM=void 0,t.getElementFromDOM=function(e){const t=document.querySelector(e);if(t)return t},t.getElementsListFromDOM=function(e){const t=document.querySelectorAll(e);if(t)return t}},13:function(e,t,n){var a=this&&this.__awaiter||function(e,t,n,a){return new(n||(n=Promise))((function(r,i){function o(e){try{c(a.next(e))}catch(e){i(e)}}function s(e){try{c(a.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,s)}c((a=a.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.prevent=t.addCarRaceListeners=void 0;const r=n(984),i=n(131),o=n(574),s=n(346),c=new r.Server;let l;function d(e,t,n){return a(this,void 0,void 0,(function*(){const a=c.startStopEngine(t,"started"),r=yield a;return yield function(e,t,n,a){let r=0;return e.distance&&e.velocity&&(r=e.distance/e.velocity),function(e){let r=0;const i=performance.now();return r=l=requestAnimationFrame((function n(a){let o=(a-i)/e;o>1&&(o=1);const c=window.innerWidth-200;t.style.left=s.initCarPosition+o*c+"px",o<1&&(r=l=requestAnimationFrame(n))})),a.onclick=()=>{!function(e,t,n,a){var r;cancelAnimationFrame(e),c.startStopEngine(a,"stopped").then((e=>{0===e.velocity&&setTimeout((()=>{t.style.left=`${n}px`}),100)})),null===(r=t.parentElement)||void 0===r||r.classList.remove("broked")}(l,t,s.initCarPosition,n)},c.startStopEngine(n,"drive").then((a=>{var o;if(!a.success){null===(o=t.parentElement)||void 0===o||o.classList.add("broked"),cancelAnimationFrame(r);const e=performance.now(),a={id:n,time:+((e-i)/1e3).toFixed(2),result:"stopped"};return c.startStopEngine(n,"stopped"),a}return{id:n,time:+(e/1e3).toFixed(2),result:"finish"}}))}(r)}(r,e,t,n)}))}function m(e){e.preventDefault()}t.addCarRaceListeners=function(){document.addEventListener("click",(e=>{var t,n,a,r;if(e.target){const l=e.target;if("a"===l.innerHTML){const e=l,i=null===(n=null===(t=l.parentElement)||void 0===t?void 0:t.parentElement)||void 0===n?void 0:n.parentElement,o=Number(i.getAttribute("id"));e.disabled=!0;const s=null===(r=null===(a=l.parentElement)||void 0===a?void 0:a.parentElement)||void 0===r?void 0:r.children[1],c=l.nextSibling;d(s,o,c),c.disabled=!1}if("b"===l.innerHTML&&(l.previousSibling.disabled=!1),"race"===l.innerHTML){const e=l;e.disabled=!0,e.nextSibling.disabled=!0,function(){const e=(0,i.getElementsListFromDOM)(".car-image"),t=[];return e&&e.forEach((e=>{var n,a;const r=e,o=r.parentElement,s=Number(null===(n=o.parentElement)||void 0===n?void 0:n.id),c=null===(a=r.previousSibling)||void 0===a?void 0:a.childNodes[1];c.disabled=!1,c.previousSibling.disabled=!0;const l=Promise.resolve(d(r,s,c)),u=(0,i.getElementsListFromDOM)(".header .button");u&&u[1].addEventListener("click",m),t.push(l)})),Promise.all(t)}().then((e=>{!function(e){const t=e.filter((e=>"finish"===e.result)),n=t.reduce(((e,t)=>e.time<t.time?e:t),t[0]),a=document.getElementById(`${n.id}`).children[0].children[2].innerHTML;var r,i;a&&(0,o.showModalMessage)(`The first went ${a} [${n.time}]`),r=n.id,i=n.time,c.getWinner(r).then((e=>{if(e){const t={wins:e.wins+1,time:Math.min(i,e.time),id:r};c.updateWinner(t)}else{const e={wins:1,time:i,id:r};c.createWinner(e)}}))}(e)}))}"reset"===l.innerHTML&&function(){var e;const t=null===(e=(0,i.getElementFromDOM)(".buttons-row"))||void 0===e?void 0:e.children[0],n=(0,i.getElementsListFromDOM)(".car-image");n&&n.forEach((e=>{e.style.left=`${s.initCarPosition}px`})),t.disabled=!1;const a=(0,i.getElementsListFromDOM)(".car-main-btns .button");a&&a.forEach((e=>{var t,n;const a=e;a.disabled=!1,null===(n=null===(t=a.parentElement)||void 0===t?void 0:t.parentElement)||void 0===n||n.classList.remove("broked")}))}()}}))},t.prevent=m},790:function(e,t,n){var a=this&&this.__awaiter||function(e,t,n,a){return new(n||(n=Promise))((function(r,i){function o(e){try{c(a.next(e))}catch(e){i(e)}}function s(e){try{c(a.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,s)}c((a=a.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.addGarageActionsListeners=void 0;const r=n(984),i=n(131),o=n(346),s=n(574),c=n(77),l=n(889),d=n(974),m=new r.Server;function u(e){return a(this,void 0,void 0,(function*(){m.createCar(e).then((e=>e.json())).then((t=>{var n;const a=null===(n=(0,i.getElementFromDOM)(".cars-wrapper"))||void 0===n?void 0:n.children.length;if(void 0!==a&&a<r.carsForPageLimit){const n=t.id;e.id=n,(0,o.createNewCar)(e)}})).then((()=>{const e=(0,i.getElementFromDOM)(".garage .title");e&&m.getItemsAmount("garage").then((t=>{const n=`Garage (${t})`;e.innerHTML=n}))}))}))}t.addGarageActionsListeners=function(){document.addEventListener("click",(e=>{if(e.target){const t=e.target;"create"===t.innerHTML&&function(){const e=(0,i.getElementFromDOM)(".input-row_create .input-text"),t=(0,i.getElementFromDOM)(".input-row_create .input-color").value,n=e.value;""===n?(0,s.showMessage)("Type Car Brand",e):u({name:n,color:t}),(0,c.checkIfButtonActive)("garage")}(),"remove"===t.innerHTML&&function(e){var t;const n=null===(t=e.parentElement)||void 0===t?void 0:t.parentElement;if(n.getAttribute("id")){const e=Number(n.getAttribute("id"));Promise.resolve(m.removeCar(e)).then((e=>{200===e.status&&n.remove()})).then((()=>{const t=(0,i.getElementFromDOM)(".garage .title");t&&m.getItemsAmount("garage").then((e=>{const n=`Garage (${e})`;t.innerHTML=n})),(0,o.addCarOnPage)(),(0,c.checkIfButtonActive)("garage"),function(e){m.getWinner(e).then((t=>{t&&m.deleteWinner(e)}))}(e)}))}}(t),"select"===t.innerHTML&&function(e){var t;const n=(0,i.getElementFromDOM)(".input-row_update .button"),a=null===(t=e.parentElement)||void 0===t?void 0:t.parentElement,r=Number(a.getAttribute("id")),o=(0,i.getElementFromDOM)(".input-row_update .input-text"),s=(0,i.getElementFromDOM)(".input-row_update .input-color");m.getCar(r).then((e=>{o.value=e.name,s.value=e.color,n.addEventListener("click",(function t(){e.name=o.value,e.color=s.value,function(e){m.updateCar(e).then((t=>{200===t.status&&new l.Car(e).updateCar()}))}(e),o.value="",n.removeEventListener("click",t)}))}))}(t),"generate cars"===t.innerHTML&&function(){a(this,void 0,void 0,(function*(){const e=new d.CarBrand;for(let t=0;t<100;t+=1){const t=u(e.getCar());yield t}}))}()}}))}},74:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0}),t.addpaginatorWinnersBtnsListeners=t.addpaginatorBtnsListeners=void 0;const a=n(131),r=n(984),i=n(346),o=n(77),s=n(394);t.addpaginatorBtnsListeners=function(){document.addEventListener("click",(e=>{if(e.target){const t=localStorage.page,n=e.target;"next"===n.innerHTML&&"garage"===t&&function(){var e;const t=null===(e=(0,a.getElementFromDOM)(".buttons-row"))||void 0===e?void 0:e.children[0];t.disabled=!1,t.nextSibling.disabled=!1;const n=(0,a.getElementsListFromDOM)(".car-wrapper");if(n){n.forEach((e=>{e.remove()}));const e=Number(localStorage.getItem("page-number"))+1;c.getCars(e).then((t=>{t.forEach((e=>{(0,i.createNewCar)(e)})),localStorage["page-number"]=`${e}`,l(e),(0,o.checkIfButtonActive)("garage")}))}}(),"prev"===n.innerHTML&&"garage"===t&&function(){const e=new r.Server,t=(0,a.getElementFromDOM)(".cars-wrapper");if(t.children)for(;t.children[0];)t.children[0].remove();setTimeout((()=>{const t=Number(localStorage.getItem("page-number"))-1;e.getCars(t).then((e=>{e.forEach((e=>{(0,i.createNewCar)(e)})),localStorage["page-number"]=`${t}`,l(t),(0,o.checkIfButtonActive)("garage")}))}),300)}()}}))},t.addpaginatorWinnersBtnsListeners=function(){document.addEventListener("click",(e=>{if(console.log("1",e.target),e.target){const t=localStorage.page,n=e.target;"next"===n.innerHTML&&"winners"===t&&function(){const e=(0,a.getElementFromDOM)(".winners-table");if(e){for(;e.children[0];)e.children[0].remove();setTimeout((()=>{const t=Number(localStorage.getItem("winners-page-number"))+1;(0,s.createWinners)(e,t),localStorage["winners-page-number"]=`${t}`,l(t),(0,o.checkIfButtonActive)("winners")}),300)}}(),"prev"===n.innerHTML&&"winners"===t&&function(){const e=(0,a.getElementFromDOM)(".winners-table");if(e){for(;e.children[0];)e.children[0].remove();setTimeout((()=>{const t=Number(localStorage.getItem("winners-page-number"))-1;(0,s.createWinners)(e,t),localStorage["winners-page-number"]=`${t}`,l(t),(0,o.checkIfButtonActive)("winners")}),300)}}()}}))};const c=new r.Server;function l(e){(0,a.getElementFromDOM)(".subtitle_pageNumber").innerHTML=`Page #${e}`}},721:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0}),t.addSortTableListener=void 0;const a=n(131),r=n(394);t.addSortTableListener=function(){document.addEventListener("click",(e=>{if(console.log("2",e.target),e.target){const t=(0,a.getElementFromDOM)(".winners-table-header .number"),n=(0,a.getElementFromDOM)(".winners-table-header .wins"),i=(0,a.getElementFromDOM)(".winners-table-header .best-time"),o=e.target;o===t&&(0,r.sortWinners)("id"),o===n&&(0,r.sortWinners)("wins"),o===i&&(0,r.sortWinners)("time")}}))}},984:function(e,t){var n=this&&this.__awaiter||function(e,t,n,a){return new(n||(n=Promise))((function(r,i){function o(e){try{c(a.next(e))}catch(e){i(e)}}function s(e){try{c(a.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,s)}c((a=a.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.Server=t.winnersForPageLimit=t.carsForPageLimit=void 0,t.carsForPageLimit=7,t.winnersForPageLimit=10,t.Server=class{constructor(){this.baseUrl="http://127.0.0.1:3000",this.path={garage:"/garage",engine:"/engine",winners:"/winners"},this.getItemsAmount=e=>n(this,void 0,void 0,(function*(){const n=yield fetch(`${this.baseUrl}/${e}?_page=1&_limit=${t.carsForPageLimit}`);return Number(n.headers.get("X-Total-Count"))})),this.getCars=(e=1)=>n(this,void 0,void 0,(function*(){const n=yield fetch(`${this.baseUrl}${this.path.garage}?_page=${e}&_limit=${t.carsForPageLimit}`);return yield n.json()})),this.getCar=e=>n(this,void 0,void 0,(function*(){const t=yield fetch(`${this.baseUrl}${this.path.garage}`),n=(yield t.json()).find((t=>t.id===e));if(n)return n;throw Error("Car was not finded")})),this.createCar=e=>n(this,void 0,void 0,(function*(){return yield fetch(`${this.baseUrl}${this.path.garage}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})})),this.removeCar=e=>n(this,void 0,void 0,(function*(){return yield fetch(`${this.baseUrl}${this.path.garage}/${e}`,{method:"DELETE"})})),this.updateCar=e=>n(this,void 0,void 0,(function*(){return yield fetch(`${this.baseUrl}${this.path.garage}/${e.id}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})})),this.startStopEngine=(e,t)=>n(this,void 0,void 0,(function*(){const n=yield fetch(`${this.baseUrl}${this.path.engine}?id=${e}&status=${t}`,{method:"PATCH"});return n.ok?yield n.json():{success:!1}})),this.getWinners=(e=1)=>n(this,void 0,void 0,(function*(){localStorage.sort||localStorage.setItem("sort",JSON.stringify(["id","ASC"]));const n=JSON.parse(localStorage.sort),a=yield fetch(`${this.baseUrl}${this.path.winners}?_page=${e}&_limit=${t.winnersForPageLimit}&_sort=${n[0]}&_order=${n[1]}`);return yield a.json()})),this.getWinner=e=>n(this,void 0,void 0,(function*(){const t=yield fetch(`${this.baseUrl}${this.path.winners}`);return(yield t.json()).find((t=>t.id===e))||null})),this.updateWinner=e=>n(this,void 0,void 0,(function*(){return yield fetch(`${this.baseUrl}${this.path.winners}/${e.id}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({wins:e.wins,time:e.time})})})),this.createWinner=e=>n(this,void 0,void 0,(function*(){return yield fetch(`${this.baseUrl}${this.path.winners}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})})),this.deleteWinner=e=>n(this,void 0,void 0,(function*(){return yield fetch(`${this.baseUrl}${this.path.winners}/${e}`,{method:"DELETE"})})),this.sortWinners=(e,a=1)=>n(this,void 0,void 0,(function*(){const n=yield fetch(`${this.baseUrl}${this.path.winners}?_page=${a}&_limit=${t.winnersForPageLimit}&_sort=${e[0]}&_order=${e[1]}`);return yield n.json()}))}}},574:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0}),t.showModalMessage=t.showMessage=void 0;const a=n(657),r=n(131),i=n(13);t.showMessage=function(e,t){const n={tag:"div",class:["message"],innerHTML:e};if(t.parentElement){const e=(0,a.createElement)(n);t.parentElement.append(e),e&&setTimeout((()=>{!function(e){const t=function(n){n&&e.classList.add("message_hidden"),document.removeEventListener("click",t)};document.addEventListener("click",t)}(e)}),100)}},t.showModalMessage=function(e){const t={tag:"div",class:["message-modal"],innerHTML:e},n=(0,r.getElementFromDOM)(".cars-wrapper"),o=(0,a.createElement)(t);n.append(o),document.onclick=()=>{o.remove()};const s=(0,r.getElementsListFromDOM)(".header .button");s&&s[1].removeEventListener("click",i.prevent)}},8:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.btnType2Templ=t.btnType1Templ=void 0,t.btnType1Templ={tag:"button",class:["button","button_type1"]},t.btnType2Templ={tag:"button",class:["button","button_type2"]}},77:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0}),t.checkIfButtonActive=t.Page=void 0;const a=n(657),r=n(984),i=n(8),o={tag:"div"},s={tag:"h1",class:["title"]},c={tag:"h2",class:["subtitle","subtitle_pageNumber"]},l={tag:"div",class:["paginator-row"]};class d{constructor(e){this.id=e,this.pageContainerTempl=o,this.container=(0,a.createElement)(this.pageContainerTempl),this.container.id=e,this.serv=new r.Server,this.titleTempl=s,this.pageNumTempl=c,this.buttonsPaginatorRowTempl=l}createTitle(e,t,n){const r=(0,a.createElement)(n);return this.serv.getItemsAmount(t).then((t=>{const n=`${e} (${t})`;r.innerHTML=n})),r}createPageNum(e){let t="1";"garage"===this.id&&(localStorage.getItem("page-number")||localStorage.setItem("page-number","1"),t=localStorage.getItem("page-number")),"winners"===this.id&&(localStorage.getItem("winners-page-number")||localStorage.setItem("winners-page-number","1"),t=localStorage.getItem("winners-page-number"));const n=`Page #${t}`;return e.innerHTML=n,(0,a.createElement)(e)}createMainWrapper(e){return(0,a.createElement)(e)}createPaginatorsBtns(e){const t=(0,a.createElement)(e),n=(0,a.createElement)(i.btnType1Templ);t.append(n),n.innerHTML="prev",n.setAttribute("id","prevBtn");const r=(0,a.createElement)(i.btnType1Templ);return t.append(r),r.innerHTML="next",r.setAttribute("id","nextBtn"),t}render(){const e=this.createTitle("","",this.titleTempl),t=this.createPageNum(this.pageNumTempl),n=this.createPaginatorsBtns(this.buttonsPaginatorRowTempl);return this.container.append(e,t,n),this.container}}t.Page=d,d.TextObject={},t.checkIfButtonActive=function(e){const t=document.getElementById("prevBtn"),n=document.getElementById("nextBtn"),a=r.carsForPageLimit;let i=1;"garage"===e&&(i=Number(localStorage.getItem("page-number"))),"winners"===e&&(i=Number(localStorage.getItem("winners-page-number"))),i>1&&!0===t.disabled&&(t.disabled=!1),1===i&&!1===t.disabled&&(t.disabled=!0),(new r.Server).getItemsAmount(e).then((e=>{i<Math.ceil(e/a)&&!0===n.disabled?n.disabled=!1:i>=Math.ceil(e/a)&&!1===n.disabled&&(n.disabled=!0)}))}},346:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0}),t.createCars=t.addCarOnPage=t.createNewCar=t.GaragePage=t.initCarPosition=void 0;const a=n(77),r=n(8),i=n(657),o=n(361),s=n(131),c=n(984),l=n(889),d={tag:"section",class:["garage"]},m={tag:"div",class:["cars-actions-section"]},u={tag:"div",class:["cars-actions-row","input-row_create"]},p={tag:"div",class:["cars-actions-row","input-row_update"]},g={tag:"div",class:["cars-actions-row","buttons-row"]},h={tag:"input",class:["input-text"],attribute:{type:"text"}},v={tag:"input",class:["input-color"],attribute:{type:"color"}},b={tag:"div",class:["cars-wrapper"]},f={tag:"div",class:["car-wrapper"]},M={tag:"div",class:["car-header"]},w={tag:"span",class:["car-brand"]},E={tag:"div",class:["car-main"]},T={tag:"div",class:["car-main-btns"]},y={tag:"div",class:["car-image"],innerHTML:`${o.car}`},S={tag:"div",class:["flag-image"],innerHTML:`${o.flag}`};t.initCarPosition=0;class C extends a.Page{constructor(e){super(e)}createMainWrapper(e){const t=(0,i.createElement)(e);return this.createGarage(t),t}createGarage(e){this.createCarsActionsSection(e);const t=(0,i.createElement)(b);e.append(t);const n=Number(localStorage.getItem("page-number")),a=new c.Server;Promise.resolve(a.getCars(n)).then((e=>{e.forEach((e=>{L(e)}))}))}createInputs(e){const t=(0,i.createElement)(u);e.append(t);const n=(0,i.createElement)(h);n.classList.add("inputText_light");const a=(0,i.createElement)(v);a.classList.add("inputColor_light");const o=(0,i.createElement)(r.btnType2Templ);o.innerHTML="create",t.append(n,a,o);const s=(0,i.createElement)(p);e.append(s);const c=(0,i.createElement)(h);c.classList.add("inputText_dark");const l=(0,i.createElement)(v);l.classList.add("inputColor_dark");const d=(0,i.createElement)(r.btnType2Templ);if(d.innerHTML="update",s.append(c,l,d),localStorage.savedGarageState){const e=JSON.parse(localStorage.savedGarageState);e&&(n.value=e.inputTextCr,a.value=e.inputColorCr,c.value=e.inputTextUpd,l.value=e.inputColorUpd)}}createCarsActionsSection(e){const t=(0,i.createElement)(m);e.append(t),this.createInputs(t);const n=(0,i.createElement)(g);t.append(n);const a=(0,i.createElement)(r.btnType1Templ);a.innerHTML="race";const o=(0,i.createElement)(r.btnType1Templ);o.innerHTML="reset";const s=(0,i.createElement)(r.btnType2Templ);s.innerHTML="generate cars",n.append(a,o,s)}render(){this.container.classList.add("garage");const e=this.createTitle(C.TextObject.title,C.TextObject.servPath,this.titleTempl),t=this.createPageNum(this.pageNumTempl),n=this.createMainWrapper(d),a=this.createPaginatorsBtns(this.buttonsPaginatorRowTempl);return this.container.append(e,t,n,a),this.container}}function L(e){new l.Car(e).createCar()}function P(e,n){const a=(0,i.createElement)(f);e.append(a),a.setAttribute("id",`${n.id}`);const o=(0,i.createElement)(M);a.append(o);const s=(0,i.createElement)(r.btnType2Templ);o.append(s),s.innerHTML="select";const c=(0,i.createElement)(r.btnType2Templ);o.append(c),c.innerHTML="remove";const l=(0,i.createElement)(w);o.append(l),l.innerHTML=n.name;const d=(0,i.createElement)(E);a.append(d);const m=(0,i.createElement)(T);d.append(m);const u=(0,i.createElement)(r.btnType1Templ);m.append(u),u.innerHTML="a";const p=(0,i.createElement)(r.btnType2Templ);m.append(p),p.innerHTML="b",p.disabled=!0;const g=(0,i.createElement)(y);d.append(g),t.initCarPosition=g.offsetLeft,g.style.fill=n.color;const h=(0,i.createElement)(S);d.append(h)}t.GaragePage=C,C.TextObject={title:"Garage",servPath:"garage"},t.createNewCar=L,t.addCarOnPage=function(){const e=(0,s.getElementFromDOM)(".cars-wrapper"),t=e.children.length,n=Number(localStorage.getItem("page-number"));t&&t<c.carsForPageLimit&&(new c.Server).getCars(n).then((t=>{t[c.carsForPageLimit-1]&&P(e,t[c.carsForPageLimit-1])}))},t.createCars=P},394:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0}),t.sortWinners=t.createWinners=t.WinnersPage=void 0;const a=n(77),r=n(657),i=n(984),o=n(361),s=n(721),c=n(131),l={tag:"section",class:["winners"]},d=[{name:"Number",class:"number"},{name:"Car",class:"car"},{name:"Model",class:"model"},{name:"Wins",class:"wins"},{name:"Best time (sec)",class:"best-time"}],m={tag:"ul",class:["winners-table-header"]},u={tag:"li",class:["winners-table-col"]},p={tag:"div",class:["winners-table"]},g={tag:"ul",class:["winners-row"]},h={tag:"li",class:["winners-item"]};class v extends a.Page{constructor(e){super(e)}createMainWrapper(e){const t=(0,r.createElement)(e);this.createHeaderWinners(t);const n=(0,r.createElement)(p);return t.append(n),b(n),t}createHeaderWinners(e){const t=(0,r.createElement)(m);e.append(t),d.forEach((e=>{const n=(0,r.createElement)(u);n.classList.add(`${e.class}`),n.innerHTML=e.name,t.append(n)}))}render(){this.container.classList.add("winners");const e=this.createTitle(v.TextObject.title,v.TextObject.servPath,this.titleTempl),t=this.createPageNum(this.pageNumTempl),n=this.createMainWrapper(l),a=this.createPaginatorsBtns(this.buttonsPaginatorRowTempl);return this.container.append(e,t,n,a),(0,s.addSortTableListener)(),this.container}}function b(e,t=1){const n=new i.Server;n.getWinners(t).then((t=>{t.forEach((t=>{n.getCar(t.id).then((n=>{const a=(0,r.createElement)(g);e.append(a);const i=(0,r.createElement)(h);i.classList.add(`${d[0].class}`),i.innerHTML=`${t.id}`;const s=(0,r.createElement)(h);s.classList.add(`${d[1].class}`),s.innerHTML=`${o.car}`,s.classList.add("car-image_small"),s.style.fill=n.color;const c=(0,r.createElement)(h);c.classList.add(`${d[2].class}`),c.innerHTML=`${n.name}`;const l=(0,r.createElement)(h);l.classList.add(`${d[3].class}`),l.innerHTML=`${t.wins}`;const m=(0,r.createElement)(h);m.classList.add(`${d[4].class}`),m.innerHTML=`${t.time}`,a.append(i,s,c,l,m)}))}))}))}t.WinnersPage=v,v.TextObject={title:"Winners",servPath:"winners"},t.createWinners=b,t.sortWinners=function(e){const t=new i.Server,n=localStorage.getItem("sort");if(null===n){const e=["id","ASC"];localStorage.setItem("sort",JSON.stringify(e))}else{const t=JSON.parse(n);if(t[0]===e){const n=t[1];if("ASC"===n){const t=[e,"DESC"];localStorage.sort=JSON.stringify(t)}if("DESC"===n){const t=[e,"ASC"];localStorage.sort=JSON.stringify(t)}}else{const t=[e,"ASC"];localStorage.sort=JSON.stringify(t)}}const a=JSON.parse(localStorage.sort);t.sortWinners(a).then((()=>{const e=(0,c.getElementFromDOM)(".winners-table");if(e){for(;e.children[0];)e.children[0].remove();b(e)}}))}}},t={};function n(a){var r=t[a];if(void 0!==r)return r.exports;var i=t[a]={exports:{}};return e[a].call(i.exports,i,i.exports,n),i.exports}n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n(766),n(674),(new(n(495).App)).run()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,